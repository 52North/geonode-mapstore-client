(self.webpackChunkgeonode_mapstore_client=self.webpackChunkgeonode_mapstore_client||[]).push([[43678],{584121:(e,r,n)=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function o(e,r,n){return o=function(e,r){if("object"!=t(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r),(r="symbol"==t(o)?o:o+"")in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e;var o}n.d(r,{Z:()=>o})},185447:(e,r,n)=>{"use strict";n.d(r,{Z:()=>i});var t=n(798574);var o=n(427244);const i=function(e,r){if(r=r||{},!(0,o.Kn)(r))throw new Error("options is invalid");var n=r.properties;if(!e)throw new Error("geojson is required");var i=function(e){var r=[1/0,1/0,-1/0,-1/0];return(0,t.pZ)(e,(function(e){r[0]>e[0]&&(r[0]=e[0]),r[1]>e[1]&&(r[1]=e[1]),r[2]<e[0]&&(r[2]=e[0]),r[3]<e[1]&&(r[3]=e[1])})),r}(e),s=(i[0]+i[2])/2,u=(i[1]+i[3])/2;return(0,o.xm)([s,u],n)}},819081:(e,r,n)=>{"use strict";e.exports=n(1174)},748759:(e,r,n)=>{"use strict";n.d(r,{df:()=>m,YD:()=>b});var t=n(722122),o=n(419756),i=n(663349),s=n(393552),u=n(584121),l=n(124852),a=n(441143),c=n.n(a),p=new Map,f=new Map,h=new Map,d=0;function g(e,r,n){void 0===n&&(n={}),n.threshold||(n.threshold=0);var t=n,o=t.root,i=t.rootMargin,s=t.threshold;if(c()(!p.has(e),"react-intersection-observer: Trying to observe %s, but it's already being observed by another instance.\nMake sure the `ref` is only used by a single <Observer /> instance.\n\n%s",e),e){var u=function(e){return e?h.has(e)?h.get(e):(d+=1,h.set(e,d.toString()),h.get(e)+"_"):""}(o)+(i?s.toString()+"_"+i:s.toString()),l=f.get(u);l||(l=new IntersectionObserver(y,n),u&&f.set(u,l));var a={callback:r,element:e,inView:!1,observerId:u,observer:l,thresholds:l.thresholds||(Array.isArray(s)?s:[s])};return p.set(e,a),l.observe(e),a}}function v(e){if(e){var r=p.get(e);if(r){var n=r.observerId,t=r.observer,o=t.root;t.unobserve(e);var i=!1,s=!1;n&&p.forEach((function(r,t){t!==e&&(r.observerId===n&&(i=!0,s=!0),r.observer.root===o&&(s=!0))})),!s&&o&&h.delete(o),t&&!i&&t.disconnect(),p.delete(e)}}}function y(e){e.forEach((function(e){var r=e.isIntersecting,n=e.intersectionRatio,t=e.target,o=p.get(t);if(o&&n>=0){var i=o.thresholds.some((function(e){return o.inView?n>e:n>=e}));void 0!==r&&(i=i&&r),o.inView=i,o.callback(i,e)}}))}var m=function(e){function r(){for(var r,n=arguments.length,t=new Array(n),o=0;o<n;o++)t[o]=arguments[o];return r=e.call.apply(e,[this].concat(t))||this,(0,u.Z)((0,i.Z)(r),"state",{inView:!1,entry:void 0}),(0,u.Z)((0,i.Z)(r),"node",null),(0,u.Z)((0,i.Z)(r),"handleNode",(function(e){r.node&&v(r.node),r.node=e||null,r.observeNode()})),(0,u.Z)((0,i.Z)(r),"handleChange",(function(e,n){(e!==r.state.inView||e)&&r.setState({inView:e,entry:n}),r.props.onChange&&r.props.onChange(e,n)})),r}(0,s.Z)(r,e);var n=r.prototype;return n.componentDidMount=function(){},n.componentDidUpdate=function(e,r){e.rootMargin===this.props.rootMargin&&e.root===this.props.root&&e.threshold===this.props.threshold||(v(this.node),this.observeNode()),r.inView!==this.state.inView&&this.state.inView&&this.props.triggerOnce&&(v(this.node),this.node=null)},n.componentWillUnmount=function(){this.node&&(v(this.node),this.node=null)},n.observeNode=function(){if(this.node){var e=this.props,r=e.threshold,n=e.root,t=e.rootMargin;g(this.node,this.handleChange,{threshold:r,root:n,rootMargin:t})}},n.render=function(){var e=this.state,r=e.inView,n=e.entry;if(!function(e){return"function"!=typeof e.children}(this.props))return this.props.children({inView:r,entry:n,ref:this.handleNode});var i=this.props,s=i.children,u=i.as,a=i.tag,c=(i.triggerOnce,i.threshold,i.root,i.rootMargin,(0,o.Z)(i,["children","as","tag","triggerOnce","threshold","root","rootMargin"]));return(0,l.createElement)(u||a||"div",(0,t.Z)({ref:this.handleNode},c),s)},r}(l.Component);function b(e){void 0===e&&(e={});var r=(0,l.useRef)(),n=(0,l.useState)({inView:!1,entry:void 0}),t=n[0],o=n[1],i=(0,l.useCallback)((function(n){r.current&&v(r.current),n&&g(n,(function(r,t){o({inView:r,entry:t}),r&&e.triggerOnce&&v(n)}),e),r.current=n}),[e.threshold,e.root,e.rootMargin,e.triggerOnce]);return(0,l.useDebugValue)(t.inView),[i,t.inView,t.entry]}(0,u.Z)(m,"displayName","InView"),(0,u.Z)(m,"defaultProps",{threshold:0,triggerOnce:!1})},41545:e=>{e.exports=t,e.exports.parse=t,e.exports.stringify=function e(r){function n(e){return e.join(" ")}function t(e){return e.map(n).join(", ")}function o(e){return e.map(t).map(i).join(", ")}function i(e){return"("+e+")"}switch("Feature"===r.type&&(r=r.geometry),r.type){case"Point":return"POINT ("+n(r.coordinates)+")";case"LineString":return"LINESTRING ("+t(r.coordinates)+")";case"Polygon":return"POLYGON ("+o(r.coordinates)+")";case"MultiPoint":return"MULTIPOINT ("+t(r.coordinates)+")";case"MultiPolygon":return"MULTIPOLYGON ("+r.coordinates.map(o).map(i).join(", ")+")";case"MultiLineString":return"MULTILINESTRING ("+o(r.coordinates)+")";case"GeometryCollection":return"GEOMETRYCOLLECTION ("+r.geometries.map(e).join(", ")+")";default:throw new Error("stringify requires a valid GeoJSON Feature or geometry object as input")}};var r=/[-+]?([0-9]*\.[0-9]+|[0-9]+)([eE][-+]?[0-9]+)?/,n=new RegExp("^"+r.source+"(\\s"+r.source+"){1,}");function t(e){var r,t=e.split(";"),o=t.pop(),i=(t.shift()||"").split("=").pop(),s=0;function u(e){var r=o.substring(s).match(e);return r?(s+=r[0].length,r[0]):null}function l(){u(/^\s*/)}function a(){l();for(var e,r=0,t=[],o=[t],i=t;e=u(/^(\()/)||u(/^(\))/)||u(/^(,)/)||u(n);){if("("===e)o.push(i),i=[],o[o.length-1].push(i),r++;else if(")"===e){if(0===i.length)return null;if(!(i=o.pop()))return null;if(0==--r)break}else if(","===e)i=[],o[o.length-1].push(i);else{if(e.split(/\s/g).some(isNaN))return null;Array.prototype.push.apply(i,e.split(/\s/g).map(parseFloat))}l()}return 0!==r?null:t}function c(){for(var e,r,t=[];r=u(n)||u(/^(,)/);)","===r?(t.push(e),e=[]):r.split(/\s/g).some(isNaN)||(e||(e=[]),Array.prototype.push.apply(e,r.split(/\s/g).map(parseFloat))),l();return e?(t.push(e),t.length?t:null):null}return(r=function e(){return function(){if(!u(/^(point(\sz)?)/i))return null;if(l(),!u(/^(\()/))return null;var e=c();return e?(l(),u(/^(\))/)?{type:"Point",coordinates:e[0]}:null):null}()||function(){if(!u(/^(linestring(\sz)?)/i))return null;if(l(),!u(/^(\()/))return null;var e=c();return e&&u(/^(\))/)?{type:"LineString",coordinates:e}:null}()||function(){if(!u(/^(polygon(\sz)?)/i))return null;l();var e=a();return e?{type:"Polygon",coordinates:e}:null}()||function(){if(!u(/^(multipoint)/i))return null;l();var e=o.substring(o.indexOf("(")+1,o.length-1).replace(/\(/g,"").replace(/\)/g,"");o="MULTIPOINT ("+e+")";var r=a();return r?(l(),{type:"MultiPoint",coordinates:r}):null}()||function(){if(!u(/^(multilinestring)/i))return null;l();var e=a();return e?(l(),{type:"MultiLineString",coordinates:e}):null}()||function(){if(!u(/^(multipolygon)/i))return null;l();var e=a();return e?{type:"MultiPolygon",coordinates:e}:null}()||function(){var r,n=[];if(!u(/^(geometrycollection)/i))return null;if(l(),!u(/^(\()/))return null;for(;r=e();)n.push(r),l(),u(/^(,)/),l();return u(/^(\))/)?{type:"GeometryCollection",geometries:n}:null}()}())&&i.match(/\d+/)&&(r.crs={type:"name",properties:{name:"urn:ogc:def:crs:EPSG::"+i}}),r}}}]);